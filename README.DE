
ABHÄNGIGKEITEN
--------------

- gcc-g++
- tntnet
- tntnet-devel
- tntdb
zum übersetzen von Tntnet:
- automake
- autoconf
- libtool
- postgresql-devel
- zlib-devel
- openssl-devel

Peruschim benutzt PostgreSQL als Backend so das u.U.
"./configure --with-sqlite=no --with-mysql=no" beim übersetzen von tntdb
angegeben werden muss.


Quellen übersetzen
------------------

Für die Erstellung von peruschim_cpp werden autotools verwendet.

Um peruschim_cpp zu erstellen sind die folgenden Schritte nötig:

  * check die letzte Version auf github aus  (https://github.com/OlafRadicke/peruschim_cpp)
  * Und führe aus "autoreconf -i && ./configure && make"

Die ausführbare Datei findest du nun unter src/peruschim_cpp.

Alternativ kann das Build auch in einem separaten Verzeichnis erstellt werden.
Dann ist wie folgt zu verfahren:

  * "autoreconf -i" ausführen
  * "mkdir build" ausführen
  * "cd build" ausführen
  * "../configure" ausführen
  * "make" ausführen

Nun sind alle generiereten Datein im Build-Verzeichnis zu finden. Noch ein Tipp:
Die meisten Systeme haben heutzutage mehere CPUs oder Kerne. Um die volle 
Leistung zu nutzen kann man auch "make -j 4" aufrufen, dann wird make mit vier
Prozessen gleichzeitig laufen um die Zeit Kompilierens zu verkürzen. 

Um das Verzeichnis von den Artefakten zu bereinigen wird der Befehl 
"make distclean" aufgerufen. 


INSTALLATION
------------


DATENBANK VORBEREITEN
=====================

(unter Fedora 17)
# Server installieren
# Redhat, Fedora...
yum -y install postgresql-server
#Debian...
aptitude install  postgresql

# Datenbank initalisieren (Redhat/Fedora)
service postgresql initdb
# Server starten (Redhat/Fedora)
systemctl start postgresql.service
# Einstellen das nach Systemstart Datenbank automatisch startet. (Redhat/Fedora)
chkconfig postgresql on
# Zum postgres-Accound wechseln
su - postgres
# Neuen Datenbank-User anlegen
createuser -W peruschim_cpp
# Datenbank erstellen und User zuweisen
createdb -O peruschim_cpp  peruschim_cpp
# ggf. Anpassungen an der Konfiguration in
# Rdehat/Fedora
/var/lib/pgsql/data/pg_hba.conf
# Debian...
/etc/postgresql/9.1/main/pg_hba.conf

# Server neu starten
systemctl restart postgresql.service
# Verbindung testen
psql -U peruschim_cpp -h localhost -W peruschim_cpp
# Log-Analyse:
 tail -n 60 /var/lib/pgsql/data/pg_log/postgresql-Sun.log
# Tabellen erstellen:
psql -h localhost -U peruschim_cpp peruschim_cpp < /peruschim_cpp/PostgreSQL/db_schema.sql


STARTEN
-------

nach dem Komplieren einfach die Datei ./peruschim_cp ausfüren. Es muss eine
Konfigurationsdatei mit Namen "peruschim_cpp.conf" im ausführendem Verzeichnis
vorhanden sein oder im Verzeichnis "/etc/".

Das initale Passwort von User "admin" ist "admin". Das Passwort
sollte sofort nach der Installation geändert werden.


TROUBLESHOOTING
---------------

error while loading shared libraries
====================================

Wenn beim starten eine solche Fehlermeldung kommt:

or@hamburg:~/a-z/g/git-repos/peruschim_cpp$ ./peruschim_cpp
    /peruschim_cpp: error while loading shared libraries: libtntdb.so.3: cannot
    open shared object file: No such file or directory

Ist dem System die shared libraries der libtntdb nicht bekannt. Stelle sicher
das Tntdb installiert ist und kontrolliere die Konfiguration in /etc/ld.so.conf.d/
ob der Pfad zur shared librarie konfiguriert ist. Wenn nicht lege eine
Konfigurationsdatei an mit den Namen /etc/ld.so.conf.d/tntdb.conf. Deren Inhalt
muss lauten:
/usr/local/lib/

Oder je nach dem wo deine Lib installiert ist. Danach muss die Konfiguration
vom System neu eingelesen werden. Das geschied mir dem Befehl: "ldconfig"


AC_PROG_LIBTOOL: command not found
==================================

Wenn der folgende Fehler auftritt beim übersetzen:

 ./configure: line 2413: AC_PROG_LIBTOOL: command not found
 configure: error: cannot find install-sh or install.sh in "." "./.." "./../.."

Dann muss der folgende Befehl ausgeführt werden:

 autoreconf -ivf

Und danach weiter mit "./configure && make"

TODOs
=====

* Wahrnungen beim Übersetzen bearbeiten.
* Feedback beim editieren von Versen einbauen.
* TNT_REQUEST_SHARED_VAR() und <%request scope="shared"> verwenden.
* "Neuen Verseintrag erstellen" werden alte Datensäze geladen.

