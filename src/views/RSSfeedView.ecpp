<#
Copyright (C) 2013  Olaf Radicke <briefkasten@olaf-rdicke.de>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or later
version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
#>

<%pre>
    #include <vector>
    #include <models/Config.h>
    #include <manager/RSSfeedManager.h>
    #include <models/RSSfeed.h>
    #include <time.h>
</%pre>

<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" >
    <channel>


        <title>Peruschim RSS-Feed</title>
        <link>http://<$ Config::it().domainName() $></link>
        <description>Mit Peruschim kannst du gemeinsam mit anderen deine Bibelstudien machen.</description>

        <language>de-de</language>
        <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 Germany License.</copyright>

% RSSfeedManager feedManager;
% std::vector<RSSfeed> feedList = feedManager.getFeeds( 3 );
% for ( unsigned int i=0; i < feedList.size(); i++) {
        <item>
            <title><$ feedList[i].getTitle() $></title>
            <link><$ feedList[i].getLinkURL()  $></link>
            <description><$ feedList[i].getDescription()  $></description>
        </item>
% }

<# target date format (RFC 822): Mon, 06 Sep 2009 16:20:00 +0000  #>
% cxxtools::DateTime lastupdate = feedManager.getLastUpdate();
% time_t rawtime;
% struct tm * timeinfo;
% const char * weekday[] = {"Sun","Mon","Tue","Wed","Thu","Fri","Sat"};
% const char * monthname[] = {"NON",
%     "Jan","Feb","Mar",
%     "Apr","May","Jun",
%     "Jul","Aug","Sep",
%     "Oct","Nov","Dec"};
% std::string strhour;
% std::string strminute;
% std::string strsecond;
% time ( &rawtime );
% timeinfo = localtime ( &rawtime );
% timeinfo->tm_year = lastupdate.year();
% timeinfo->tm_mon = lastupdate.month();
% timeinfo->tm_mday = lastupdate.day();
% mktime ( timeinfo );
% if ( lastupdate.hour() < 10 ) {
%     strhour = "0" + cxxtools::convert<std::string>( lastupdate.hour() );
% } else {
%     strhour = cxxtools::convert<std::string>( lastupdate.hour() );
% };
% if ( lastupdate.minute() < 10 ) {
%     strminute = 
%          "0" + cxxtools::convert<std::string>( lastupdate.minute() );
% } else {
%     strminute = 
%          cxxtools::convert<std::string>( lastupdate.minute() );
% };
% if ( lastupdate.second() < 10 ) {
%     strsecond = 
%          "0" + cxxtools::convert<std::string>( lastupdate.second() );
% } else {
%     strsecond = 
%          cxxtools::convert<std::string>( lastupdate.second() );
% };

        <pubDate><$ weekday[timeinfo->tm_wday] $> , <$ lastupdate.day() $> <$ monthname[lastupdate.month()] $> <$ lastupdate.year() $> <$ strhour $>:<$ strminute $>:<$ strsecond $>  +0000 </pubDate>

    </channel>
</rss>