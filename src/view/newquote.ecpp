<%pre>
    #include "../model/EditionManager.h"
    #include "../model/WebACL.h"
    #include "../model/UserSession.h"
    #include "../model/Edition.h"
    #include "../model/Quote.h"

    # define ERROR std::cerr << "[" << __FILE__ << ":" << __LINE__ << "] " <<
    # define DEBUG std::cout << "[" << __FILE__ << ":" << __LINE__ << "] " <<
</%pre>

<%config>
</%config>

<%args>
    // define the query parameters
    std::string edition_id = "";
    std::string book_title = "";
    int chapter_begin = 0;
    int sentence_begin = 0;
    int chapter_end = 0;
    int sentence_end = 0;
    std::string quote_text = "";
    std::string keywords = "";
    std::string note = "";
    std::string is_private_data = "false";
    std::string save_button;
    std::string create_button;
</%args>

<%session scope="global">
    // define your session scope variables here
    // std::string mySessionState;
    UserSession userSession;
</%session>

<%cpp>
    std::vector<Edition> editionList;
    std::string feedback = "";
    Edition editionData;
    Quote quoteData;

    // ACL Check
    if ( userSession.isInRole ( "admin" ) == false ) {
        DEBUG "Nicht autorisiert!!" << std::endl;
        return reply.redirect ( "/login" );
    };
    std::string userName  = userSession.getUserName();


    DEBUG "save_button: " << save_button << std::endl;
    DEBUG "create_button: " << create_button << std::endl;
    // is button "create" kicked?
    if ( create_button == "Speichern" ) {
        DEBUG "edition_id" << edition_id << std::endl;
        quoteData.setEditionID( edition_id );

        DEBUG "book_title" << book_title << std::endl;
        quoteData.setBookTitle( book_title );

        DEBUG "chapter_begin" << chapter_begin << std::endl;
        quoteData.setChapterBegin( chapter_begin );

        DEBUG "sentence_begin" << sentence_begin << std::endl;
        quoteData.setSentenceBegin( sentence_begin );

        DEBUG "chapter_end" << chapter_end << std::endl;
        quoteData.setChapterEnd( chapter_end );

        DEBUG "sentence_end" << sentence_end << std::endl;
        quoteData.setSentenceEnd( sentence_end );

        DEBUG "quote_text" << quote_text << std::endl;
        quoteData.setQuoteText( quote_text );

        DEBUG "keywords" << keywords << std::endl;
        quoteData.setKeywords( keywords );

        DEBUG "note" << note << std::endl;
        quoteData.setNote( note );

        DEBUG "is_private_data" << is_private_data << std::endl;
        if ( is_private_data == "false" ) {
            quoteData.setIsPrivateData( false );
        } else {
            quoteData.setIsPrivateData( true );
        }

        quoteData.setOwnerID( userSession.getUserID() );

        quoteData.saveAsNew( );
        feedback = "Der Verse wurde gespeichert!";
    } else {
        editionList =  EditionManager::getAllEditions();  

    }
</%cpp>


<!DOCTYPE HTML>
<html>
<head>
    <title>PERUSCHIM - Neuer Vers</title>
    <meta charset = "UTF-8" />
    <& "style" &>
</head>
<body>

    <& "header" &>
    <br />

    <div class="mainmenue">
        <ul>
            <li class="tableft"><a href="home">Home</a></li>
            <li class="tabmiddle_activ"><a href="newquote">Neuer Vers</a></li>
            <li class="tabmiddle"><a href="portalprovider">Anbieterportal</a></li>
            <li class="tabmiddle"><a href="portaloperator">Vermittlerportal</a></li>
            <li class="tabmiddle"><a href="portaladmin">Administrationsportal</a></li>
            <li class="tabright" ><a href="logout">Abmelden</a></li>
        </ul>
    </div>
    <br />


    <div class="centerbox">
        <h1>Neuen Verseeintrag erstellen</h1>

% if ( feedback != "" ) {

        <div class="feedback-box">
            <b><$ feedback $> </b>
        </div>

% } else {

        <div class="flush-left-box">
            <br class="clear-both">
            <form method="post" >

                <p>Edition:
                    <select name="edition_id" size="1">
%                    for ( unsigned int i=0; i<editionList.size(); i++) {
                        <option value="<$  editionList[i].getID() $>"><$ editionList[i].getName() $></option>
%                    }
                    </select>
                </p>

                <p>Buch:
                    <select name="book_title" size="1">
%                   for ( unsigned int i=0; i<quoteData.allBibleBooks.size(); i++) {
                        <option value="<$  quoteData.allBibleBooks[i] $>"><$ quoteData.allBibleBooks[i] $></option>
%                   }
                    </select>
                </p>

                <p>von Kapitel: <input 
                        name="chapter_begin" 
                        type="number" 
                        min="1" 
                        max="200"
                        required="required"> Vers: <input 
                        name="sentence_begin" 
                        type="number" 
                        min="1" 
                        max="200"
                        required="required"></p>

                <p>Bis Kapitel: <input 
                        name="chapter_end" 
                        type="number" 
                        min="1" 
                        max="200"
                        required="required"> Vers: <input 
                        name="sentence_end" 
                        type="number" 
                        min="1" 
                        max="200"
                        required="required"></p>

                <p>Zitat: <br><input 
                        class="full-width"
                        name="quote_text" 
                        type="text" 
                        maxlength="400"></p>

                <p>Schlagworte (Kommergetrennt): <br><input 
                        class="full-width"
                        name="keywords" 
                        type="text" 
                        maxlength="300"></p>


                <p>Notizen/Anmerungen: <br><textarea 
                        class="full-width"
                        name="note" 
                        rows="10"></textarea></p>
                <p>Datensatz nicht Ã¶ffentlicht sichtbar machen <input 
                        type="checkbox"
                        id="is_private_data"
                        value="true"
                        name="is_private_data" /></p>

                <p><input id="save_button" type="submit" name="create_button" value="Speichern"></p>
            </form>

% }
        </div>
    </div>

</body>
</html>