<%pre>
    // put your includes here
    // #include "foo.h"
    #include <iostream>
    #include "../../model/AccountData.h"
    #include "../../model/WebACL.h"
    #include "../../model/TeamDataBase.h"
    #include "../../model/UserSession.h"
    
    # define ERROR std::cerr << "[" << __FILE__ << ":" << __LINE__ << "] " <<
    # define DEBUG std::cout << "[" << __FILE__ << ":" << __LINE__ << "] " <<
</%pre>

<%args>
    // define the query parameters
    std::string account_name = "";
    std::string server_name = "";
    std::string database_name = "";
    std::string port_no = "";
    std::string db_encoding = "";
    std::string db_user = "";
    std::string db_password = "";
    std::string db_sslmode = "";
    std::string owner_id = "";
    std::string create;
</%args>
<%session scope="global">
    // define your session scope variables here
    // std::string mySessionState;
    // userSession;
    UserSession userSession;
</%session>

<%cpp>
    std::vector<AccountData> accountDatas;
    std::string feedback = "";
    TeamDataBase teamDataBase;
    
    // ACL Check
    if ( userSession.isInRole ( "admin" ) == false ) {
        DEBUG "Nicht autorisiert!!" << std::endl;
        return reply.redirect ( "/access_denied" );
    };
    DEBUG "Autorisiert!!" << std::endl;
    
    // is button "create" kicked?
    if ( create == "Erstellen" ) {
        DEBUG "account_name" << account_name << std::endl;
        teamDataBase.setAccount_name ( account_name );
        DEBUG "server_name" << server_name << std::endl;
        teamDataBase.setServer_name ( server_name );
        DEBUG "database_name" << database_name << std::endl;
        teamDataBase.setDatabase_name ( database_name );
        DEBUG "port_no" << port_no << std::endl;
        teamDataBase.setPort_no ( port_no );
        DEBUG "db_encoding" << db_encoding << std::endl;
        teamDataBase.setDB_encoding ( db_encoding );
        DEBUG "db_user" << db_user << std::endl;
        teamDataBase.setDB_user ( db_user );
        DEBUG "db_password" << db_password << std::endl;
        teamDataBase.setDB_password ( db_password );
        DEBUG "db_sslmode" << db_sslmode << std::endl;
        teamDataBase.setDB_sslmode ( db_sslmode );
        DEBUG "owner_id" << owner_id << std::endl;
        teamDataBase.setOwner_id ( owner_id );
        
        teamDataBase.saveConnection ( );
        feedback = "Datenbankverbindung wurde gespeichert!";
    } else {
        accountDatas =  WebACL::getAllAccounts ( );  

    }
    

</%cpp>

<html>
<head>
    <title>Neuen Datenbankverbindung anlegen</title>
    <& "style" &>
</head>
<body>
    <& "header" &>
    <br />
    <& "mainmenu" &>
    <br />
    <div id="innergroupbox">

        <h1>Neuen Datenbankverbindung anlegen</h1>

% if ( feedback != "" ) {

        <div id="feedback-box">
            <b><$ feedback $> </b>
        </div>

% } else {

        <form method="post" >
            <p>Verbindungsname*:<br><input 
                    name="account_name" 
                    type="text" 
                    size="40" 
                    maxlength="80" 
                    required="required"></p>
            <p>Server-Name*:<br><input 
                    name="server_name" 
                    type="text" 
                    size="40" 
                    maxlength="80" 
                    required="required"></p>
            <p>Datenbank-Name*:<br><input 
                    name="database_name" 
                    type="text" 
                    size="40" 
                    maxlength="80" 
                    required="required"></p>
            <p>Port-Nummer*:<br><input 
                    name="port_no" 
                    type="number"   
                    size="8" 
                    min="0" 
                    max="9999" 
                    value="5432" required="required"></p>
            <p>Encoding*:<br><input 
                    name="db_encoding" 
                    type="text" 
                    size="15" 
                    maxlength="15" 
                    value="UNICODE" 
                    required="required"></p>
            <p>Datenbank-User-Name*:<br><input 
                    name="db_user" 
                    type="text" 
                    size="40" 
                    maxlength="80" 
                    required="required"></p>
            <p>Passwort*:<br><input 
                    name="db_password" 
                    type="text" 
                    size="40" 
                    maxlength="80" 
                    required="required"></p>
            <p>ssl-Mode*:<br>
                <select name="db_sslmode" size="1">
                    <option value="true">true</option>
                    <option value="false">false</option>
                </select>
                </p>
            <p>Eigent√ºmer der Verbindung*:<br>
                <select name="owner_id" size="1">
%               for ( unsigned int i=0; i<accountDatas.size(); i++) {
                    <option value="<$  accountDatas[i].getID() $>"><$ accountDatas[i].getLogin_name() $></option>
%               }
                </select>
                </p>
            <p><input id="save_button" type="submit" name="create" value="Erstellen"></p>
        </form>

% }
    </div>
</body>
</html>